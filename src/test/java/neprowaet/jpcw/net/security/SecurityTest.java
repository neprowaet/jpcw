package neprowaet.jpcw.net.security;

import org.checkerframework.checker.units.qual.A;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

class SecurityTest {

    MPPC mppc;
    List<Security> securitySequence;

    @BeforeEach
    void refresh() {
        mppc = new MPPC();
        securitySequence = new ArrayList<>();
    }


    @Test
    void mppcTest() {
        Map<String, String> inputToResultMap = new LinkedHashMap<>();
        inputToResultMap.put("021210db88c8d6f0165188fbaf011b55ddd97b00", "02121035f80b286d577765");
        inputToResultMap.put("041d00026b40000059948078201f10017ff05e447891e000", "020e80026b40000059a9000000000100000000ffffffff0000000000000000");
        inputToResultMap.put("8043c53e0c181c20e716d80dce79e24780", "808f1480026b40000059a960708738ed81f3bced81f3bc");
        inputToResultMap.put("5382347bd1e24fff60200034e90008182fa826f10041ce000ea00ce00de00ec00d600c201009800b8000845d9d240067c21937b2002e01c3a15008040281e2201209c48a00f714803e48d0228810780120000f07268030b7d88b64714681e3d83003080babd421c9d19fc6a03001200595199b207f8c590056005c00994125d090e00787882410540201009701ce00f925e1a640334e9951ed573e995feff5e5c3ff224c494d2fe523b49b81bb827dffe57873f2444d18f0f0f1a800002400019609eb480007fe00014c0f0020000af49d411640b0000bc08800016000180017a8a2ae007913e5800d7c527f88f0f010f264830099e4cf8bd1c4a85ff71c1f1e600005704c02fe1ff760f3ca08006000076ebd3c000c3cac7c9e603f5cbe4a000079e406ca3a1ea2843e4500002009faef0f1e5e02000042cdfd160424720f14cfa1d4012e41dbee8fc5e1f4f20c493905c25009c83e110000018ca3835d56c033a441eec2ce90320001e2476140a7ccf123c7787e1a07346e0dfa17d83c560474755507806015e4a1c343818eaaa1cf99e2478ef0fb7aaa173aa83df31508c0003037c00f3e45e015f1720c3957beb60810060f80a2ba0478a000f00fc980b1be08b51ea4fdae5776bd0451ad3e780000ff86b8003019000007a95ef057c400f8901018818225081f6f16017800017295f285fc47db265540e00000e00f423d3786e988f1de1d90277937e3bf08bb01f8d1f7d2fd19a844040104040201d171f097e874a95617a9550a8e5954440cb5c2e86633699fae8b00619163821cf45e1ebd033e969e00", "538468000000000000000000026b40000059a9010001cea001030500000026000000020e7000750067006f0076006b00610080b0017000109767490019001900326f64005c038e8a808080c080808080a0b8a2807b94807ca34094408780240001010001b4018b7d916c9c51c08b7d916c9c51c006006101757a88727467757a88727467030012005951b3640f005951590056005c00b284ae890e007878848415008080ae03b803000000000000b201b4010000c7eaf3ffffffffffde5c3fffffffffff312534ff291dc9f037704fff0000000000000000c7eaf3ff93463c3c3c6a000009000065840000000000000001000000014c0f0020000a00000026000000e40b0000f81100002c00030002000000c55c00000200000000000000350000004f00000000000000000000001000000000002040000000000000000000000000000000000000000000000000000000000000000100008b350000000200000001000000015c1300ff0f000000000000000079090000800c00002400010000000000000000003000000000000000000000000000000000000000000000000000000000000000030000005f2500003c0000001b280000010000009421000001000000000040130000000000000000000000004000000400008b370000000500000001000000015c1300ff0f0000000000000000b3100000c0120000240001000000000000000000370000000000000000000000000000000000000000000000000000000000000003000000a425000005000000042800000100000094210000010000000000401300000000000000000000000040000020000031a8000000090000000100000001441e00ff0f0000000000000000c8190000c8190000240001001400000014000000000000000000000000000000000000000000000000000000000000000000000000000000000040370000000000000000000000000000060000005f600000000a00000001000000015c0f00ff0f00000000000000005014000038180000240001001c0000001c0000000000000000000000000000000000000000000000000000000000000000000000030000005c2500001e000000542300000b000000792300000b0000000000401300000000000000000000000040000600000072de0000001100000187000001f408000001000f002300000040130000000000000000000000000002000000003d4900000014000000010000000108c6e900000000003f000040130000000000000000000000000010000000003d4a000000150000000100000001080c4002000000403f000040130000000000000000000000000020000000005cca00000017000000010000000132d40e00000e00170000000000000000000300000000000000000000000000204e0000000000000000000001000000f603010000000017000000005fc66a11010041010080000001000000005fc3caaa6070875542c72cd4440ceb8bc331b6b3000000960000ffffffff00000000120000000000000000000000000000000000001000000000000000000000000000000000");
        inputToResultMap.put("5381423cfb01c34ac30b754e9080026002c74d400063d003c00318078d586534ae80e8007de10c9021584c6a0205021acd1440408aa05028137a038b1c41023940832ec524690006400b402600116018989a83453bc7b2f00630100383134b4bdf8d45200740066fcf8a46f809650004d0053006d406e801a72b17170ec01be511e013a01a6004ebd04c4066bda0121212c3119f2383e17878fb9134c3281e776b077411808b1eec7fe00014c01c14d7ac00f1217020000231e230ca63de80df9e3c43161443e08c1ec8f3de1ce09ec000048107c46147bd39f179381d29c2bc8c164893000050d40d3014e3eac193c97891825d1c4b1f73d2787580bdbe178bd8af1ab998001186a9186cec169a14ff7002f8ab0fb5fa4f1f47a57e3c70bc60d16f20837f7382ebc5f6460d1705c1278823068b9b81e581003a998297144339e5910d6c8631448c3340b8e5ee3132e3ca62863c68f135e2a9f4b4f000", "538288000000000000000180026b40000059a9010001cea100040600000002000000000c7a00780063007a007800630080b001700010574074003e003e0032408a002c00c040c08d669440409540c0c0b7c0716390409cc0865d94a3480032005a013000960193135068ce960193135068ce2f00630100383134e97b00383134e97b29003a00337e7c523700020050004d0053006d406e80340000005c5c3b006fa89e013a01cc00ba000000b101b5010000121212ff00000000121212ff00000000121212ff00000000000000000000000000000000121212ffb43c3c3c3c80000005000008ca0000000000000001000000014c0100ff0f05000000050000005c080000980800002c000300010000000d0000000000000062210000050000000900000000000000000000001e0000000000a0410000a040000000000000000000000000000000000000000000000000000000010000a9130000000b000000a60000c350340000ffff0000000000000000640000006400000014000000622100000100000000000000000000001000000000000000000000000000000400000000000000000000000000000800000008300000000c0000000100000001140100000000000000020000000000000003000400000000130000000000000000000000000000100000003d4900000014000000010000000108a08601000000003f000040130000000000000000000000000010000000003d4a00000015000000010000000108f04902000000403f0000401300000000000000000000000000200000010000000060400ecc60708755c433bce4435b2198c4986682000000010000ffffffff00000000120000000000000000000000000000000000001000000000000000000000000000000000");
        inputToResultMap.put("5380d1bcfb06c14bd24d8297583d5228c98b587300f1b064f28c98b79782a7f9674630227c1ecb9c089f8fbea36044f80b93b33c0898a1cd52ccd0d9e8549a227024f39258113e7f80", "5381c6000000000000000680026b40000059a9010001cea6000406000000030000000014640061007300640061007300640064006400640080b001700010574074003e003e0032408a002c00c040c08d669440409540c0c0b7c0716390409cc0865d94a3480032005a013000960193135068ce960193135068ce2f00630100383134e97b00383134e97b29003a00337e7c523700020050004d0053006d406e80340000005c5c3b006fa89e013a01cc00ba000000b101b5010000121212ff00000000121212ff00000000121212ff00000000000000000000000000000000121212ffb43c3c3c3c80000003000008300000000c0000000100000001140100000000000000020000000000000003000000000000130000000000000000000000000000100000003d4900000014000000010000000108a08601000000003f000040130000000000000000000000000010000000003d4a00000015000000010000000108fd4602000000403f00004013000000000000000000000000002000000100000000605cbb3360708755c3b54b334367c2c9c44e04bc000000010000ffffffff00000000120000000000000000000000000000000000001000000000000000000000000000000000");
        inputToResultMap.put("5380e118600f8113a49f0227318c0838f123023726100f3230c83f32c08dfb88b23e046f80ba0731c08d99e171a21b2596b3444d9add30237d2f00", "5381ca000000000000000780026b40000059a9010001cea700040600000003000000001864006100640061007300640061007300640061007300640080b001700010574074003e003e0032408a002c00c040c08d669440409540c0c0b7c0716390409cc0865d94a3480032005a013000960193135068ce960193135068ce2f00630100383134e97b00383134e97b29003a00337e7c523700020050004d0053006d406e80340000005c5c3b006fa89e013a01cc00ba000000b101b5010000121212ff00000000121212ff00000000121212ff00000000000000000000000000000000121212ffb43c3c3c3c80000003000008300000000c0000000100000001140100000000000000020000000000000003000000000000130000000000000000000000000000100000003d4900000014000000010000000108a08601000000003f000040130000000000000000000000000010000000003d4a00000015000000010000000108964702000000403f00004013000000000000000000000000002000000100000000605d03b160708755c3bc2e344364e5d9c44db5f4000000010000ffffffff00000000120000000000000000000000000000000000001000000000000000000000000000000000");
        inputToResultMap.put("53c60461c045feff8119800780", "531100000000ffffffff80026b40000059a900");

        for (String input : inputToResultMap.keySet()) {
            byte[] unpacked = mppc.unpack(hexStringToByteArray(input));
            byte[] expected = hexStringToByteArray(inputToResultMap.get(input));

            System.out.println(byteArToHexString(unpacked) + "\n" + byteArToHexString(expected) + "\n" + "=".repeat(50));
            assertArrayEquals(unpacked, expected);
        }


        //System.out.println(byteArToHexString(mppc.unpack(dump)));

    }

    @Test
    void securitySequenceTest() {
        // 1e7688696bf668e47e02c3107394a4eeb0505829e7cfb552 ---secretkey--> f7f9513f56dd11292e203a94af37a6
        byte[] data = hexStringToByteArray("1e7688696bf668e47e02c3107394a4eeb0505829e7cfb552");
        byte[] expected = hexStringToByteArray("f7f9513f56dd11292e203a94af37a6");

        securitySequence.add(new RC4("secretkey"));
        securitySequence.add(new MPPC());

        for (Security sec : securitySequence)
            data = sec.unpack(data);

        assertArrayEquals(data, expected);
    }


    public static byte[] hexStringToByteArray(String s) {
        int len = s.length();
        byte[] data = new byte[len / 2];
        for (int i = 0; i < len; i += 2) {
            data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) << 4)
                    + Character.digit(s.charAt(i + 1), 16));
        }
        return data;
    }

    public static String byteArToHexString(byte[] ar) {
        StringBuilder sb = new StringBuilder();
        for (byte b : ar)
            sb.append(String.format("%02x", b & 0xff));
        return sb.toString();
    }
}